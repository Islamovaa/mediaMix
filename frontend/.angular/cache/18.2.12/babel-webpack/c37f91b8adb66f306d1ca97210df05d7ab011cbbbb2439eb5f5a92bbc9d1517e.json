{"ast":null,"code":"import { __decorate } from \"tslib\";\n// Aktualisiere MediaService\nlet MediaService = class MediaService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/media';\n  }\n  getAllMedia() {\n    return this.http.get(this.apiUrl);\n  }\n  createMedia(medium) {\n    return this.http.post(this.apiUrl, medium);\n  }\n};\nMediaService = __decorate([Injectable({\n  providedIn: 'root'\n})], MediaService);\nexport { MediaService };","map":{"version":3,"names":["MediaService","constructor","http","apiUrl","getAllMedia","get","createMedia","medium","post","__decorate","Injectable","providedIn"],"sources":["C:\\Users\\liana\\mediaMix\\frontend\\src\\app\\shared\\media.service.ts"],"sourcesContent":["// Erstelle eine Schnittstelle für deine Mediendaten\r\ninterface Media {\r\n  title: string;\r\n  category: string;\r\n  [key: string]: any; // Ermöglicht zusätzliche dynamische Eigenschaften\r\n}\r\n\r\n// Aktualisiere MediaService\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MediaService {\r\n  private apiUrl = 'http://localhost:5000/media';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllMedia(): Observable<Media[]> {\r\n    return this.http.get<Media[]>(this.apiUrl);\r\n  }\r\n\r\n  createMedia(medium: Media): Observable<Media> {\r\n    return this.http.post<Media>(this.apiUrl, medium);\r\n  }\r\n}"],"mappings":";AAOA;AAIO,IAAMA,YAAY,GAAlB,MAAMA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6BAA6B;EAEP;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC;EAC5C;EAEAG,WAAWA,CAACC,MAAa;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAQ,IAAI,CAACL,MAAM,EAAEI,MAAM,CAAC;EACnD;CACD;AAZYP,YAAY,GAAAS,UAAA,EAHxBC,UAAU,CAAC;EACVC,UAAU,EAAE;CACb,CAAC,C,EACWX,YAAY,CAYxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}