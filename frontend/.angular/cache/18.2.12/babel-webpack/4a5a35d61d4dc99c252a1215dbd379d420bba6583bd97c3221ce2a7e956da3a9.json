{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nlet HomeComponent = class HomeComponent {\n  constructor(mediaService) {\n    this.mediaService = mediaService;\n    this.mediaList = [];\n    this.showModal = false;\n    this.newMedium = {\n      title: '',\n      category: '',\n      status: '',\n      rating: null,\n      comment: ''\n    };\n    this.customFields = [];\n  }\n  ngOnInit() {\n    this.loadMedia();\n  }\n  loadMedia() {\n    this.mediaService.getAllMedia().subscribe({\n      next: data => this.mediaList = data,\n      error: err => console.error('Fehler beim Laden der Medien:', err)\n    });\n  }\n  getKeys(obj) {\n    return Object.keys(obj);\n  }\n  getCategoryClass(category) {\n    return category?.trim().toLowerCase().replace(/\\s+/g, '-') || '';\n  }\n  openModal() {\n    this.showModal = true;\n  }\n  closeModal() {\n    this.showModal = false;\n    this.resetForm();\n  }\n  addCustomField() {\n    this.customFields.push({\n      key: '',\n      value: ''\n    });\n  }\n  toggleStatus(status) {\n    this.newMedium.status = status;\n    if (status !== 'erledigt') {\n      this.newMedium.rating = null;\n      this.newMedium.comment = '';\n    }\n  }\n  onSubmit() {\n    const fullMedium = {\n      title: this.newMedium.title,\n      category: this.newMedium.category,\n      status: this.newMedium.status\n    };\n    if (this.newMedium.status === 'erledigt') {\n      fullMedium.rating = this.newMedium.rating;\n      fullMedium.comment = this.newMedium.comment;\n    }\n    const dynamicFields = {};\n    this.customFields.forEach(field => {\n      if (field.key && field.value) {\n        dynamicFields[field.key] = field.value;\n      }\n    });\n    fullMedium.dynamicFields = dynamicFields;\n    this.mediaService.createMedia(fullMedium).subscribe({\n      next: savedMedium => {\n        this.mediaList.push(savedMedium);\n        this.closeModal();\n        this.loadMedia();\n      },\n      error: err => console.error('Fehler beim Speichern des Mediums:', err)\n    });\n  }\n  resetForm() {\n    this.newMedium = {\n      title: '',\n      category: '',\n      status: '',\n      rating: null,\n      comment: ''\n    };\n    this.customFields = [];\n  }\n  editMedium(medium) {\n    console.log(\"Bearbeiten:\", medium);\n  }\n  deleteMedium(id) {\n    console.log(\"Löschen ID:\", id);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  standalone: true,\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  imports: [CommonModule, FormsModule]\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","CommonModule","FormsModule","HomeComponent","constructor","mediaService","mediaList","showModal","newMedium","title","category","status","rating","comment","customFields","ngOnInit","loadMedia","getAllMedia","subscribe","next","data","error","err","console","getKeys","obj","Object","keys","getCategoryClass","trim","toLowerCase","replace","openModal","closeModal","resetForm","addCustomField","push","key","value","toggleStatus","onSubmit","fullMedium","dynamicFields","forEach","field","createMedia","savedMedium","editMedium","medium","log","deleteMedium","id","__decorate","selector","standalone","templateUrl","styleUrls","imports"],"sources":["C:\\Users\\liana\\mediaMix\\frontend\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MediaService } from '../shared/media.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  imports: [CommonModule, FormsModule]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  mediaList: any[] = [];\r\n  showModal = false;\r\n\r\n  newMedium: any = {\r\n    title: '',\r\n    category: '',\r\n    status: '',\r\n    rating: null,\r\n    comment: ''\r\n  };\r\n\r\n  customFields: { key: string, value: string }[] = [];\r\n\r\n  constructor(private mediaService: MediaService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadMedia();\r\n  }\r\n\r\n  loadMedia(): void {\r\n    this.mediaService.getAllMedia().subscribe({\r\n      next: (data) => this.mediaList = data,\r\n      error: (err) => console.error('Fehler beim Laden der Medien:', err)\r\n    });\r\n  }\r\n\r\n  getKeys(obj: any): string[] {\r\n    return Object.keys(obj);\r\n  }\r\n\r\n  getCategoryClass(category: string | undefined): string {\r\n    return category?.trim().toLowerCase().replace(/\\s+/g, '-') || '';\r\n  }\r\n\r\n  openModal(): void {\r\n    this.showModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.resetForm();\r\n  }\r\n\r\n  addCustomField(): void {\r\n    this.customFields.push({ key: '', value: '' });\r\n  }\r\n\r\n  toggleStatus(status: string): void {\r\n    this.newMedium.status = status;\r\n    if (status !== 'erledigt') {\r\n      this.newMedium.rating = null;\r\n      this.newMedium.comment = '';\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    const fullMedium: any = {\r\n      title: this.newMedium.title,\r\n      category: this.newMedium.category,\r\n      status: this.newMedium.status\r\n    };\r\n\r\n    if (this.newMedium.status === 'erledigt') {\r\n      fullMedium.rating = this.newMedium.rating;\r\n      fullMedium.comment = this.newMedium.comment;\r\n    }\r\n\r\n    const dynamicFields: any = {};\r\n    this.customFields.forEach(field => {\r\n      if (field.key && field.value) {\r\n        dynamicFields[field.key] = field.value;\r\n      }\r\n    });\r\n\r\n    fullMedium.dynamicFields = dynamicFields;\r\n\r\n    this.mediaService.createMedia(fullMedium).subscribe({\r\n      next: (savedMedium) => {\r\n        this.mediaList.push(savedMedium);\r\n        this.closeModal();\r\n        this.loadMedia();\r\n      },\r\n      error: (err) => console.error('Fehler beim Speichern des Mediums:', err)\r\n    });\r\n  }\r\n\r\n  resetForm(): void {\r\n    this.newMedium = {\r\n      title: '',\r\n      category: '',\r\n      status: '',\r\n      rating: null,\r\n      comment: ''\r\n    };\r\n    this.customFields = [];\r\n  }\r\n\r\n  editMedium(medium: any): void {\r\n    console.log(\"Bearbeiten:\", medium);\r\n  }\r\n\r\n  deleteMedium(id: string): void {\r\n    console.log(\"Löschen ID:\", id);\r\n  }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}